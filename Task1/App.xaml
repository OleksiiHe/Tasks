<Application x:Class="Task1.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Task1"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <!--<ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Task1;component/Resources/Images.xaml"/>
            </ResourceDictionary.MergedDictionaries>-->

            <DataTemplate x:Key="EllipseTemplate">
                <local:EllipseView/>
            </DataTemplate>
            <DataTemplate x:Key="RectangleTemplate">
                <local:RectangleView/>
            </DataTemplate>
            <DataTemplate x:Key="TrapezoidTemplate">
                <local:TrapezoidView/>
            </DataTemplate>
            <DataTemplate x:Key="TriangleTemplate">
                <local:TriangleView/>
            </DataTemplate>
            <DataTemplate x:Key="Default">
                <local:Default/>
            </DataTemplate>

            <Style x:Key="FigureContentStyle">
                <Setter Property="ContentControl.ContentTemplate" 
                        Value="{StaticResource Default}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding FigureType}" 
                                 Value="Ellipse">
                        <Setter Property="ContentControl.ContentTemplate" 
                                Value="{StaticResource EllipseTemplate}"/>
                        <Setter Property="Image.Source" 
                                Value="/Resources/Images/Ellipse.jpg"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding FigureType}" 
                                 Value="Rectangle">
                        <Setter Property="ContentControl.ContentTemplate" 
                                Value="{StaticResource RectangleTemplate}"/>
                        <Setter Property="Image.Source" 
                                Value="/Resources/Images/Rectangle.jpg"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding FigureType}" 
                                 Value="Trapezoid">
                        <Setter Property="ContentControl.ContentTemplate" 
                                Value="{StaticResource TrapezoidTemplate}"/>
                        <Setter Property="Image.Source" 
                                Value="/Resources/Images/Trapezoid.jpg"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding FigureType}" 
                                 Value="Triangle">
                        <Setter Property="ContentControl.ContentTemplate" 
                                Value="{StaticResource TriangleTemplate}"/>
                        <Setter Property="Image.Source" 
                                Value="/Resources/Images/Triangle.jpg"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="GeneralRequirement">
                <!--<Style x:Key="GeneralRequirement" 
                   TargetType="StackPanel">-->
                <Setter Property="StackPanel.Visibility" 
                        Value="Collapsed"/>
                <Setter Property="StackPanel.Orientation" 
                        Value="Horizontal"/>
                <Setter Property="StackPanel.HorizontalAlignment" 
                        Value="Right"/>
                <Setter Property="StackPanel.Margin" 
                        Value="0 0 50 0"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding FormulaType}" 
                                 Value="Area">
                        <Setter Property="StackPanel.Visibility" 
                                Value="Visible"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding FormulaType}" 
                                 Value="Perimeter">
                        <Setter Property="StackPanel.Visibility" 
                                Value="Visible"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="AreaRequirement" 
                   TargetType="StackPanel">
                <Setter Property="Visibility" 
                        Value="Collapsed"/>
                <Setter Property="Orientation" 
                        Value="Horizontal"/>
                <Setter Property="HorizontalAlignment" 
                        Value="Right"/>
                <Setter Property="StackPanel.Margin" 
                        Value="0 0 50 0"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding FormulaType}" 
                                 Value="Area">
                        <Setter Property="Visibility" 
                                Value="Visible"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="PerimeterRequirement" 
                   TargetType="StackPanel">
                <Setter Property="Visibility" 
                        Value="Collapsed"/>
                <Setter Property="Orientation" 
                        Value="Horizontal"/>
                <Setter Property="HorizontalAlignment" 
                        Value="Right"/>
                <Setter Property="StackPanel.Margin" 
                        Value="0 0 50 0"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding FormulaType}" 
                                 Value="Perimeter">
                        <Setter Property="Visibility" 
                                Value="Visible"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="HeaderTextBlock" 
                   TargetType="TextBlock"
                   BasedOn="{StaticResource GeneralRequirement}">
                <Setter Property="Margin" 
                        Value="0 20 0 20"/>
                <Setter Property="FontSize" 
                        Value="20"/>
                <Setter Property="FontWeight" 
                        Value="Bold"/>
                <Setter Property="HorizontalAlignment" 
                        Value="Center"/>
            </Style>
            
            <Style x:Key="ParameterTextBlock" 
                   TargetType="TextBlock"
                   BasedOn="{StaticResource GeneralRequirement}">
                <Setter Property="Margin" 
                        Value="5 5 5 5"/>
                <Setter Property="FontSize" 
                        Value="18"/>
                <Setter Property="FontWeight" 
                        Value="Bold"/>
            </Style>

            <ControlTemplate x:Key="validationTemplate">
                <StackPanel Orientation="Horizontal">
                    <AdornedElementPlaceholder/>
                    <TextBlock Foreground="Red" 
                               FontSize="26"
                               FontWeight="Bold"
                               Padding="5 -9 0 0">!
                    </TextBlock>
                </StackPanel>
            </ControlTemplate>

            <Style x:Key="ParameterTextBox">
                <Setter Property="TextBox.Margin" 
                        Value="5 5 5 5"/>
                <Setter Property="TextBox.Width" 
                        Value="50"/>
                <Setter Property="TextBox.Height" 
                        Value="20"/>
                <!--<Setter Property="Button.IsEnabled" Value="True"/>-->
                <Setter Property="Validation.ErrorTemplate" 
                        Value="{StaticResource validationTemplate}"/>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" 
                             Value="true">
                        <Setter Property="TextBox.ToolTip"
                                Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                                        Path=(Validation.Errors)[0].ErrorContent}"/>
                        <Setter Property="TextBox.Foreground" 
                                Value="Red"/>
                        <!--<Setter Property="Button.IsEnabled" Value="False"/>-->
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--<Style x:Key="ButtonDisabler"
                   TargetType="Button">
                <Setter Property="Visibility" 
                        Value="Collapsed"/>
                <Setter Property="HorizontalAlignment" 
                        Value="Center"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding FormulaType}" 
                                 Value="Area">
                        <Setter Property="Visibility" 
                                Value="Visible"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding FormulaType}" 
                                 Value="Perimeter">
                        <Setter Property="Visibility" 
                                Value="Visible"/>
                    </DataTrigger>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="IsEnabled" Value="False"/>
                    </Trigger>
                </Style.Triggers>
            </Style>-->

        </ResourceDictionary>
    </Application.Resources>
</Application>
